pipeline {
  
  agent {
    dockerfile {
      label 'docker'
      additionalBuildArgs '${DOCKER_NO_CACHE} --tag "packer-demo/jenkins-agent:latest"'
    }
  }
  environment {
    AWS_ACCESS_KEY_ID     = credentials('PACKER_AWS_ACCESS_KEY')
    AWS_SECRET_ACCESS_KEY = credentials('PACKER_AWS_SECRET_KEY')
    WORK_SUB_DIR          = 'vm-based/infra/packer'
    JENKINS_USER_ID       = 'user'
    JENKINS_API_TOKEN     =  credentials('JENKIN_API_TOKEN')
  }

  stages {
    stage('terraform-apply') {
      options {
        timeout(time: 10, unit: 'MINUTES')
      }

      steps {
        sh '''#!/usr/bin/env bash
          echo "Shell Process ID: $$"
          cd "${WORK_SUB_DIR}"
          sed -i 's/\r$//' scripts/*
          bash scripts/tf-apply.bash
        '''
      }
    }

    stage('packaging-image') {
      options {
        timeout(time: 150, unit: 'MINUTES')
      }

      steps {
        sh '''#!/usr/bin/env bash
          echo "Shell Process ID: $$"
          set -o errexit
          readonly ROLE_LIST=(
            web
            app
          )
          cd "${WORK_SUB_DIR}"
          for role_name in "${ROLE_LIST[@]}"
          do
            bash scripts/packer-build.sh $role_name
          done
        '''
      }
    }
  }

  post {
    cleanup {
      sh '''#!/usr/bin/env bash
        echo "Shell Process ID: $$"
        cd "${WORK_SUB_DIR}"
        bash scripts/post-cleanup.sh
      '''
    }
  }
}
